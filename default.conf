worker_processes auto;
events {
  worker_connections 1024;
}
error_log /proc/self/fd/2 info;

http {
  access_log /proc/self/fd/1;

  include       /usr/local/openresty/nginx/conf/mime.types;
  default_type  application/octet-stream;
                                           
                                                                             
  sendfile        on;     

  # The "auto_ssl" shared dict must be defined with enough storage space to
  # hold your certificate data.
  lua_shared_dict auto_ssl 1m;
  lua_shared_dict auto_ssl_settings 1m;
  # A DNS resolver must be defined for OSCP stapling to function.
  resolver 8.8.8.8 ipv6=off;

  # Initial setup tasks.
  init_by_lua_block {
    auto_ssl = (require "resty.auto-ssl").new()

    -- Define a function to determine which SNI domains to automatically handle
    -- and register new certificates for. Defaults to not allowing any domains,
    -- so this must be configured.
    auto_ssl:set("allow_domain", function(domain)
      return string.match(domain, "bitlo")
    end)
    auto_ssl:set("dir", "/certs")

    auto_ssl:init()
  }

  init_worker_by_lua_block {
    auto_ssl:init_worker()
  }

  # HTTP server
  server {
    listen 80;
    server_name --;

    # Endpoint used for performing domain verification with Let's Encrypt.
    location /.well-known/acme-challenge/ {
      content_by_lua_block {
        auto_ssl:challenge_server()
      }
    }

    location / {
      return 301 https://$host$request_uri;
    }

  }


  # HTTPS server
  server {
    listen 443 ssl;
    server_name _;
    # Dynamic handler for issuing or returning certs for SNI domains.
    ssl_certificate_by_lua_block {
      auto_ssl:ssl_certificate()
    }

    # You must still define a static ssl_certificate file for nginx to start.
    #
    # You may generate a self-signed fallback with:
    #
    # openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 \
    #   -subj '/CN=sni-support-required-for-valid-ssl' \
    #   -keyout /etc/ssl/resty-auto-ssl-fallback.key \
    #   -out /etc/ssl/resty-auto-ssl-fallback.crt
    ssl_certificate /etc/ssl/resty-auto-ssl-fallback.crt;
    ssl_certificate_key /etc/ssl/resty-auto-ssl-fallback.key;

    location / {
        etag on;
        expires 1h;
        add_header Cache-Control "public";
        gzip on;
        gzip_vary on;  
        gzip_buffers 16 8k;
        gzip_min_length 256;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript;
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
  }

  

  # Internal server running on port 8999 for handling certificate tasks.
  server {
    listen 127.0.0.1:8999;
    location / {
      content_by_lua_block {
        auto_ssl:hook_server()
      }
    }
  }

}



